/**
 * better-strint
 * v1.0.2
 * by Wei Zhixiang
 * https://github.com/lang1427/better-strint
 */

!function(r,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(r="undefined"!=typeof globalThis?globalThis:r||self).BetterStrint=n()}(this,function(){"use strict";function t(r){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function n(r,n){if(t(r)!==n)throw new Error("Not a "+n+": "+r)}function s(r){if(n(r,"string"),!/^[\-]{0,1}[0-9]+$/.test(r)&&""!==r)throw new Error(r+": Only natural positive and negative integers from 0 to 9 can appear, excluding the + sign")}function c(r){s(r),function(r,n,t){if(!n.call(null,r))throw new Error("Condition "+t+" failed for value "+r)}(r,v,"isPositive")}function i(r){if(n(r,"number"),!Number.isInteger(r))throw new Error("Condition isInteger failed for value "+r);if(r<0)throw new Error("Expected a positive number: "+r)}function e(r){return"0"===r?"0":g(r)?r.slice(1):"-"+r}function o(r,n){c(r),c(n);for(var t=Math.max(r.length,n.length),e="",o=0,i=0,u=0;u<t;u++){for(var f=Number(y(r,u))+Number(y(n,u))+o,o=0;10<=f;)f-=10,o++;0===f?i++:(e=String(f)+w(e,i),i=0)}return e=0<o?String(o)+e:e}function u(r,n){return c(r),i(n),w(r,n-r.length)}function f(r,n){return!(!g(r)||!v(n))||(!v(r)||!g(n))&&(g(r)&&g(n)?!x(d(r),d(n)):x(r,n))}function l(r,n){if(c(r),c(n),!E(r,n))throw new Error("x must be greater or equal to y");for(var t=Math.max(r.length,n.length),e="",o=0,i=0,u=0;u<t;u++){for(var f=Number(y(r,u))-o,o=0,l=Number(y(n,u));f<l;)f+=10,o++;var a=String(f-l);"0"!==a?(e=a+w(e,i),i=0):i++}return 0===e.length?"0":e}function a(r,n){if(c(r),c(n),I(r,n))return["1","0"];if(N(n,r))return["0",p(r)];for(var t="0",e=r.length-n.length;;){for(var o=r.slice(0,r.length-e);E(o,n);)o=q(o,n),t=S(t,"1");if(r=o+r.slice(r.length-e),N(n,r))return[t=M(t,e),p(r)];if(e--,t=M(t,1),e<0)throw new Error("Illegal state")}}function h(r,n){s(r),s(n);var t=!1;P(r,n)||(t=!0),g(r)&&(r=r.slice(1)),g(n)&&(n=n.slice(1));for(var e,o,i=[],u=[],f=[];""!==r;)u.unshift(parseInt(r.substr(-4))),r=r.slice(0,-4);for(;""!==n;)f.unshift(parseInt(n.substr(-4))),n=n.slice(0,-4);for(var l=0;l<u.length;l++)for(var a=0;a<f.length;a++)o=0,u[l]&&f[a]&&(o=u[l]*f[a]),i[e=l+a]?i[e]+=o:i[e]=o;for(var c=i.length-1;0<c;c--)for(i[c]+="",4<i[c].length&&(i[c-1]+=parseInt(i[c].slice(0,-4)),i[c]=i[c].substr(-4));i[c].length<4;)i[c]="0"+i[c];return i=i[0]?i.join(""):"0",t?"-"+i:i}var g=function(r){return s(r),0===r.indexOf("-")},v=function(r){return!g(r)},m=/^(-?)0*([1-9][0-9]*)$/,b=/^0+$/,p=function(r){if(b.test(r))return"0";var n=m.exec(r);if(!n)throw new Error("Illegal strint format: "+r);return n[1]+n[2]},d=function(r){return g(r)?e(r):r},y=function(r,n){return s(r),i(n),n>=(g(t=r)?t.length-1:t.length)?"0":r.charAt(r.length-n-1);var t},w=function(r,n){c(r),i(n);for(var t=r,e=0;e<n;e++)t="0"+t;return t},x=function(r,n){if(g(r)||g(n))throw new Error("Both operands must be positive: "+r+" "+n);var t=Math.max(r.length,n.length);return u(r,t)<u(n,t)},E=function(r,n){return!f(r,n)},S=function(r,n){if(s(r),s(n),v(r)&&v(n))return o(r,n);if(g(r)&&g(n))return e(o(d(r),d(n)));var t;f(d(r),d(n))&&(t=r,r=n,n=t);n=l(d(r),d(n));return v(r)?n:e(n)},I=function(r,n){return p(r)===p(n)},N=function(r,n){return!I(r,n)&&E(r,n)},q=function(r,n){return s(r),s(n),S(r,e(n))},M=function(r,n){for(;0<n;)r+="0",n--;return r},P=function(r,n){return v(r)===v(n)};return{abs:d,add:S,div:function(r,n){s(r),s(n);var t=a(d(r),d(n))[0];return P(r,n)?t:e(t)},eq:I,ge:E,gt:N,le:function(r,n){return!!I(r,n)||f(r,n)},lt:f,negate:e,pow:function(r,n){if(s(r),i(n),0==n)return 1;if(1==n)return r;if(2==n)return h(r,r);for(var t=h(r,r),e="",o=3;o<=n;o++)t=e=h(t,r);return e},quotientRemainderPositive:a,sub:q,subPositive:l,sum:function(){for(var r=arguments.length,n=new Array(r),t=0;t<r;t++)n[t]=arguments[t];return n.reduce(function(r,n){return S(r,n)})},multiply:h}});
